using Android.Content;
using Android.Runtime;
using System;

namespace Twilio.Conversations
{
    /*
     *  The methods here had to be implemented manually because the default methods generated by the bindings generator
     *  threw a Java.Lang.NoSuchMethodError when called. It seems the JNI can't find static interface methods.
     *  To fix this, I had to call the methods from the implementing class instead.
     */
    public partial interface IConversationsClient
    {
        private static readonly IntPtr _class = JNIEnv.FindClass("com/twilio/conversations/ConversationsClientImpl");
        private static readonly IntPtr _getSdkVersionMethod = JNIEnv.GetStaticMethodID(_class, "getSdkVersion", "()Ljava/lang/String;");
        private static readonly IntPtr _createClientMethod = JNIEnv.GetStaticMethodID(_class, "create", "(Landroid/content/Context;Ljava/lang/String;Lcom/twilio/conversations/ConversationsClient$Properties;Lcom/twilio/conversations/CallbackListener;)V");
        private static readonly IntPtr _setLogLevelMethod = JNIEnv.GetStaticMethodID(_class, "setLogLevel", "(I)V");

        public static string SdkVersion => JNIEnv.GetString(JNIEnv.CallStaticObjectMethod(_class, _getSdkVersionMethod), JniHandleOwnership.TransferLocalRef);

        public static unsafe void Create(Context context, string token, IProperties properties, ICallbackListener listener)
        {
            var nativeToken = JNIEnv.NewString(token);
            try
            {
                JValue* args = stackalloc JValue[4];
                args[0] = new JValue(context?.Handle ?? IntPtr.Zero);
                args[1] = new JValue(nativeToken);
                args[2] = new JValue(properties?.Handle ?? IntPtr.Zero);
                args[3] = new JValue(listener?.Handle ?? IntPtr.Zero);
                JNIEnv.CallStaticVoidMethod(_class, _createClientMethod, args);
            }
            finally
            {
                JNIEnv.DeleteLocalRef(nativeToken);
                GC.KeepAlive(context);
                GC.KeepAlive(properties);
                GC.KeepAlive(listener);
            }
        }

        public static unsafe void SetLogLevel(LogLevel level)
        {
            try
            {
                JValue* args = stackalloc JValue[1];
                args[0] = new JValue(level.Value);
                JNIEnv.CallStaticVoidMethod(_class, _setLogLevelMethod, args);
            }
            finally
            {
                GC.KeepAlive(level);
            }
        }


        public partial interface IProperties
        {
            static readonly IntPtr _clientPropertiesBuilderClass = JNIEnv.FindClass("com/twilio/conversations/ConversationsClientImpl$PropertiesImpl$BuilderImpl");

            public static IBuilder NewBuilder()
            {
                var handle = JNIEnv.CreateInstance(_clientPropertiesBuilderClass, "()V");
                return Java.Lang.Object.GetObject<IBuilder>(handle, JniHandleOwnership.TransferLocalRef);
            }
        }
    }
}